sub.rel.geo.genes.pls = intersect(colnames(first_instance), unlist(geo.pathways[geo_pathway_names[3]]))
geo_formula = as.formula(
paste('immunage~',
# paste(rel.geo.genes, collapse = '+'),
paste(sub.rel.geo.genes.pls, collapse = '+'),
sep = '')
)
model <- train(
geo_formula, data = first_instance, method = "pls",
scale = TRUE,
trControl = trainControl("cv", number = 20),
tuneLength = 10
)
plot(model)
geo_formula
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.gene.list]],
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.geo.genes]],
pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% sub.rel.geo.genes.pls]],
first_instance[,'immunage'],
comps = 20)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
title('Comparison of responses', cex.main = 0.9)
abline(a = 0, b = 1, col = 'gray85', lwd = 2)
cor(first_instance$immunage, pls1$y.pred)
pls1$y.loads
pls1$std.coefs[order(pls1$std.coefs)]
pls1$reg.coefs[order(pls1$reg.coefs)]
cor(first_instance$immunage, pls1$y.pred)
sub.rel.geo.genes.pls = intersect(colnames(first_instance), unlist(geo.pathways[geo_pathway_names[3]]))
geo_formula = as.formula(
paste('immunage~',
# paste(rel.geo.genes, collapse = '+'),
paste(sub.rel.geo.genes.pls, collapse = '+'),
sep = '')
)
model <- train(
geo_formula, data = first_instance, method = "pls",
scale = TRUE,
trControl = trainControl("cv", number = 20),
tuneLength = 10
)
plot(model)
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.gene.list]],
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.geo.genes]],
pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% sub.rel.geo.genes.pls]],
first_instance[,'immunage'],
comps = 2)
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.gene.list]],
pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.geo.genes]],
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% sub.rel.geo.genes.pls]],
first_instance[,'immunage'],
comps = 2)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
title('Comparison of responses', cex.main = 0.9)
abline(a = 0, b = 1, col = 'gray85', lwd = 2)
cor(first_instance$immunage, pls1$y.pred)
plot(pls1)
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.gene.list]],
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.geo.genes]],
pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% sub.rel.geo.genes.pls]],
first_instance[,'immunage'],
comps = 2)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
title('Comparison of responses', cex.main = 0.9)
abline(a = 0, b = 1, col = 'gray85', lwd = 2)
cor(first_instance$immunage, pls1$y.pred)
plot(pls1)
pls1$y.loads
summary(pls1)
model <- train(
geo_formula, data = first_instance, method = "pls",
scale = TRUE,
trControl = trainControl("cv", number = 20),
tuneLength = 10
)
plot(model)
sub.rel.geo.genes.pls = intersect(colnames(first_instance), unlist(geo.pathways[geo_pathway_names[1]]))
geo_formula = as.formula(
paste('immunage~',
# paste(rel.geo.genes, collapse = '+'),
paste(sub.rel.geo.genes.pls, collapse = '+'),
sep = '')
)
model <- train(
geo_formula, data = first_instance, method = "pls",
scale = TRUE,
trControl = trainControl("cv", number = 20),
tuneLength = 10
)
plot(model)
sub.rel.geo.genes.pls = intersect(colnames(first_instance), unlist(geo.pathways[geo_pathway_names[5]]))
geo_formula = as.formula(
paste('immunage~',
# paste(rel.geo.genes, collapse = '+'),
paste(sub.rel.geo.genes.pls, collapse = '+'),
sep = '')
)
model <- train(
geo_formula, data = first_instance, method = "pls",
scale = TRUE,
trControl = trainControl("cv", number = 20),
tuneLength = 10
)
plot(model)
model
model$bestTune
model$bestTune[1]
model$bestTune[[1]]
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
# text(first_instance$immunage, pls1$y.pred, col = '#5592e3')
plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
title('Comparison of responses', cex.main = 0.9)
abline(a = 0, b = 1, col = 'gray85', lwd = 2)
text('test')
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
# text(first_instance$immunage, pls1$y.pred, col = '#5592e3')
plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
title('Comparison of responses', cex.main = 0.9)
abline(a = 0, b = 1, col = 'gray85', lwd = 2)
text('test')
text(20,55,'test')
first_instance$immunage
rmse(first_instance$immunage, pls1$y.pred)
RMSE(first_instance$immunage, pls1$y.pred)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
# text(first_instance$immunage, pls1$y.pred, col = '#5592e3')
rmse_res = rmse(fpls1$y.pred, irst_instance$immunage)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
# text(first_instance$immunage, pls1$y.pred, col = '#5592e3')
rmse_res = rmse(fpls1$y.pred, irst_instance$immunage)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
# text(first_instance$immunage, pls1$y.pred, col = '#5592e3')
rmse_res = RMSE(fpls1$y.pred, irst_instance$immunage)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
# text(first_instance$immunage, pls1$y.pred, col = '#5592e3')
rmse_res = RMSE(pls1$y.pred, irst_instance$immunage)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
# text(first_instance$immunage, pls1$y.pred, col = '#5592e3')
rmse_res = RMSE(pls1$y.pred, first_instance$immunage)
plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
title('Comparison of responses', cex.main = 0.9)
abline(a = 0, b = 1, col = 'gray85', lwd = 2)
text(min(first_instance$immunage) + 2, max(pls1$y.pred) - 3, paste('RMSE:', round(rmse_res)))
text(min(first_instance$immunage) + 2, max(pls1$y.pred) - 3, paste('RMSE:', round(rmse_res, 3)))
plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
title('Comparison of responses', cex.main = 0.9)
abline(a = 0, b = 1, col = 'gray85', lwd = 2)
text(min(first_instance$immunage) + 2, max(pls1$y.pred) - 3, paste('RMSE:', round(rmse_res, 3)))
plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
title('Comparison of responses', cex.main = 0.9)
abline(a = 0, b = 1, col = 'gray85', lwd = 2)
text(min(first_instance$immunage) + 5, max(pls1$y.pred) - 3, paste('RMSE:', round(rmse_res, 3)))
plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
title('Comparison of responses', cex.main = 0.9)
abline(a = 0, b = 1, col = 'gray85', lwd = 2)
text(min(first_instance$immunage) + 10, max(pls1$y.pred) - 3, paste('RMSE:', round(rmse_res, 3)))
plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
title('Comparison of responses', cex.main = 0.9)
abline(a = 0, b = 1, col = 'gray85', lwd = 2)
text(min(first_instance$immunage) + 10, max(pls1$y.pred) - 1, paste('RMSE:', round(rmse_res, 3)))
plot(pls1)
pls1$std.coefs[order(pls1$std.coefs)]
pls.geo.sub.models = list()
pls.geo.sub.models <- vector(mode="list", length=length(geo_pathway_names))
names(pls.geo.sub.models) <- geo_pathway_names
for (i in seq(1:length(geo_pathway_names))){
sub.rel.geo.genes.pls = intersect(colnames(first_instance), unlist(geo.pathways[geo_pathway_names[5]]))
geo_formula = as.formula(
paste('immunage~',
# paste(rel.geo.genes, collapse = '+'),
paste(sub.rel.geo.genes.pls, collapse = '+'),
sep = '')
)
model <- train(
geo_formula, data = first_instance, method = "pls",
scale = TRUE,
trControl = trainControl("cv", number = 20),
tuneLength = 10
)
plot(model)
ncomp = model$bestTune[[1]]
library(plsdepot)
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.gene.list]],
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.geo.genes]],
pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% sub.rel.geo.genes.pls]],
first_instance[,'immunage'],
comps = ncomp)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
# text(first_instance$immunage, pls1$y.pred, col = '#5592e3')
rmse_res = RMSE(pls1$y.pred, first_instance$immunage)
## plotting correlation (pred vs. original)
# plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
# title('Comparison of responses', cex.main = 0.9)
# abline(a = 0, b = 1, col = 'gray85', lwd = 2)
# text(min(first_instance$immunage) + 10, max(pls1$y.pred) - 1, paste('RMSE:', round(rmse_res, 3)))
# cor(first_instance$immunage, pls1$y.pred)
## correlation circle
# plot(pls1)
pls1$y.loads
pls1$std.coefs[order(pls1$std.coefs)]
pls1$reg.coefs[order(pls1$reg.coefs)]
pls.geo.sub.models[[geo_pathway_names[[i]]]] = rmse_res
}
pls.geo.sub.models
for (i in seq(1:length(geo_pathway_names))){
sub.rel.geo.genes.pls = intersect(colnames(first_instance), unlist(geo.pathways[geo_pathway_names[i]]))
geo_formula = as.formula(
paste('immunage~',
# paste(rel.geo.genes, collapse = '+'),
paste(sub.rel.geo.genes.pls, collapse = '+'),
sep = '')
)
model <- train(
geo_formula, data = first_instance, method = "pls",
scale = TRUE,
trControl = trainControl("cv", number = 20),
tuneLength = 10
)
plot(model)
ncomp = model$bestTune[[1]]
library(plsdepot)
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.gene.list]],
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.geo.genes]],
pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% sub.rel.geo.genes.pls]],
first_instance[,'immunage'],
comps = ncomp)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
# text(first_instance$immunage, pls1$y.pred, col = '#5592e3')
rmse_res = RMSE(pls1$y.pred, first_instance$immunage)
## plotting correlation (pred vs. original)
# plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
# title('Comparison of responses', cex.main = 0.9)
# abline(a = 0, b = 1, col = 'gray85', lwd = 2)
# text(min(first_instance$immunage) + 10, max(pls1$y.pred) - 1, paste('RMSE:', round(rmse_res, 3)))
# cor(first_instance$immunage, pls1$y.pred)
## correlation circle
# plot(pls1)
pls1$y.loads
pls1$std.coefs[order(pls1$std.coefs)]
pls1$reg.coefs[order(pls1$reg.coefs)]
pls.geo.sub.models[[geo_pathway_names[[i]]]] = rmse_res
}
pls.geo.sub.models
pls.rmse.res = list()
pls.rmse.res <- vector(mode="list", length=length(geo_pathway_names))
names(pls.rmse.res) <- geo_pathway_names
for (i in seq(1:length(geo_pathway_names))){
sub.rel.geo.genes.pls = intersect(colnames(first_instance), unlist(geo.pathways[geo_pathway_names[i]]))
geo_formula = as.formula(
paste('immunage~',
# paste(rel.geo.genes, collapse = '+'),
paste(sub.rel.geo.genes.pls, collapse = '+'),
sep = '')
)
model <- train(
geo_formula, data = first_instance, method = "pls",
scale = TRUE,
trControl = trainControl("cv", number = 20),
tuneLength = 10
)
plot(model)
ncomp = model$bestTune[[1]]
library(plsdepot)
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.gene.list]],
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.geo.genes]],
pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% sub.rel.geo.genes.pls]],
first_instance[,'immunage'],
comps = ncomp)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
# text(first_instance$immunage, pls1$y.pred, col = '#5592e3')
rmse_res = RMSE(pls1$y.pred, first_instance$immunage)
## plotting correlation (pred vs. original)
# plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
# title('Comparison of responses', cex.main = 0.9)
# abline(a = 0, b = 1, col = 'gray85', lwd = 2)
# text(min(first_instance$immunage) + 10, max(pls1$y.pred) - 1, paste('RMSE:', round(rmse_res, 3)))
# cor(first_instance$immunage, pls1$y.pred)
## correlation circle
# plot(pls1)
pls1$y.loads
pls1$std.coefs[order(pls1$std.coefs)]
pls1$reg.coefs[order(pls1$reg.coefs)]
pls.rmse.res[[geo_pathway_names[[i]]]] = rmse_res
}
for (i in seq(1:length(geo_pathway_names))){
sub.rel.geo.genes.pls = intersect(colnames(first_instance), unlist(geo.pathways[geo_pathway_names[i]]))
geo_formula = as.formula(
paste('immunage~',
# paste(rel.geo.genes, collapse = '+'),
paste(sub.rel.geo.genes.pls, collapse = '+'),
sep = '')
)
model <- train(
geo_formula, data = first_instance, method = "pls",
scale = TRUE,
trControl = trainControl("cv", number = 20),
tuneLength = 10
)
# plot(model)
ncomp = model$bestTune[[1]]
library(plsdepot)
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.gene.list]],
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.geo.genes]],
pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% sub.rel.geo.genes.pls]],
first_instance[,'immunage'],
comps = ncomp)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
# text(first_instance$immunage, pls1$y.pred, col = '#5592e3')
rmse_res = RMSE(pls1$y.pred, first_instance$immunage)
## plotting correlation (pred vs. original)
# plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
# title('Comparison of responses', cex.main = 0.9)
# abline(a = 0, b = 1, col = 'gray85', lwd = 2)
# text(min(first_instance$immunage) + 10, max(pls1$y.pred) - 1, paste('RMSE:', round(rmse_res, 3)))
# cor(first_instance$immunage, pls1$y.pred)
## correlation circle
# plot(pls1)
pls1$y.loads
pls1$std.coefs[order(pls1$std.coefs)]
pls1$reg.coefs[order(pls1$reg.coefs)]
pls.rmse.res[[geo_pathway_names[[i]]]] = rmse_res
}
pls.rmse.res
pls.rmse.res
min(pls.rmse.res)
unlist(pls.rmse.res)
min(unlist(pls.rmse.res))
which(min(unlist(pls.rmse.res)))
min(unlist(pls.rmse.res), which)
which.min(unlist(pls.rmse.res))
for (i in seq(1:length(geo_pathway_names))){
sub.rel.geo.genes.pls = intersect(colnames(first_instance), unlist(geo.pathways[geo_pathway_names[i]]))
geo_formula = as.formula(
paste('immunage~',
# paste(rel.geo.genes, collapse = '+'),
paste(sub.rel.geo.genes.pls, collapse = '+'),
sep = '')
)
model <- train(
geo_formula, data = first_instance, method = "pls",
scale = TRUE,
trControl = trainControl("cv", number = 20),
tuneLength = 10
)
# plot(model)
ncomp = model$bestTune[[1]]
library(plsdepot)
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.gene.list]],
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.geo.genes]],
pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% sub.rel.geo.genes.pls]],
first_instance[,'immunage'],
comps = ncomp)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
# text(first_instance$immunage, pls1$y.pred, col = '#5592e3')
rmse_res = RMSE(pls1$y.pred, first_instance$immunage)
## plotting correlation (pred vs. original)
jpeg(paste('results/rmse/', geo_pathway_names, '.jpg', sep = ''))
plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
title('Comparison of responses', cex.main = 0.9)
abline(a = 0, b = 1, col = 'gray85', lwd = 2)
text(min(first_instance$immunage) + 10, max(pls1$y.pred) - 1, paste('RMSE:', round(rmse_res, 3)))
dev.off()
# cor(first_instance$immunage, pls1$y.pred)
## correlation circle
jpeg(paste('results/cor_circle/', geo_pathway_names, '.jpg', sep = ''))
plot(pls1)
dev.off()
pls1$y.loads
pls1$std.coefs[order(pls1$std.coefs)]
pls1$reg.coefs[order(pls1$reg.coefs)]
pls.rmse.res[[geo_pathway_names[[i]]]] = rmse_res
}
for (i in seq(1:length(geo_pathway_names))){
sub.rel.geo.genes.pls = intersect(colnames(first_instance), unlist(geo.pathways[geo_pathway_names[i]]))
geo_formula = as.formula(
paste('immunage~',
# paste(rel.geo.genes, collapse = '+'),
paste(sub.rel.geo.genes.pls, collapse = '+'),
sep = '')
)
model <- train(
geo_formula, data = first_instance, method = "pls",
scale = TRUE,
trControl = trainControl("cv", number = 20),
tuneLength = 10
)
# plot(model)
ncomp = model$bestTune[[1]]
library(plsdepot)
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.gene.list]],
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.geo.genes]],
pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% sub.rel.geo.genes.pls]],
first_instance[,'immunage'],
comps = ncomp)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
# text(first_instance$immunage, pls1$y.pred, col = '#5592e3')
rmse_res = RMSE(pls1$y.pred, first_instance$immunage)
## plotting correlation (pred vs. original)
jpeg(paste('results/rmse/', geo_pathway_names, '.jpg', sep = ''))
plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
title('Comparison of responses', cex.main = 0.9)
abline(a = 0, b = 1, col = 'gray85', lwd = 2)
text(min(first_instance$immunage) + 10, max(pls1$y.pred) - 1, paste('RMSE:', round(rmse_res, 3)))
dev.off()
# cor(first_instance$immunage, pls1$y.pred)
## correlation circle
jpeg(paste('results/cor_circle/', geo_pathway_names, '.jpg', sep = ''))
plot(pls1)
dev.off()
pls1$y.loads
pls1$std.coefs[order(pls1$std.coefs)]
pls1$reg.coefs[order(pls1$reg.coefs)]
pls.rmse.res[[geo_pathway_names[[i]]]] = rmse_res
}
for (i in seq(1:length(geo_pathway_names))){
sub.rel.geo.genes.pls = intersect(colnames(first_instance), unlist(geo.pathways[geo_pathway_names[i]]))
geo_formula = as.formula(
paste('immunage~',
# paste(rel.geo.genes, collapse = '+'),
paste(sub.rel.geo.genes.pls, collapse = '+'),
sep = '')
)
model <- train(
geo_formula, data = first_instance, method = "pls",
scale = TRUE,
trControl = trainControl("cv", number = 20),
tuneLength = 10
)
# plot(model)
ncomp = model$bestTune[[1]]
library(plsdepot)
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.gene.list]],
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.geo.genes]],
pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% sub.rel.geo.genes.pls]],
first_instance[,'immunage'],
comps = ncomp)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
# text(first_instance$immunage, pls1$y.pred, col = '#5592e3')
rmse_res = RMSE(pls1$y.pred, first_instance$immunage)
## plotting correlation (pred vs. original)
jpeg(paste('results/rmse/', geo_pathway_names[1], '.jpg', sep = ''))
plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
title('Comparison of responses', cex.main = 0.9)
abline(a = 0, b = 1, col = 'gray85', lwd = 2)
text(min(first_instance$immunage) + 10, max(pls1$y.pred) - 1, paste('RMSE:', round(rmse_res, 3)))
dev.off()
# cor(first_instance$immunage, pls1$y.pred)
## correlation circle
jpeg(paste('results/cor_circle/', geo_pathway_names[i], '.jpg', sep = ''))
plot(pls1)
dev.off()
pls1$y.loads
pls1$std.coefs[order(pls1$std.coefs)]
pls1$reg.coefs[order(pls1$reg.coefs)]
pls.rmse.res[[geo_pathway_names[[i]]]] = rmse_res
}
for (i in seq(1:length(geo_pathway_names))){
sub.rel.geo.genes.pls = intersect(colnames(first_instance), unlist(geo.pathways[geo_pathway_names[i]]))
geo_formula = as.formula(
paste('immunage~',
# paste(rel.geo.genes, collapse = '+'),
paste(sub.rel.geo.genes.pls, collapse = '+'),
sep = '')
)
model <- train(
geo_formula, data = first_instance, method = "pls",
scale = TRUE,
trControl = trainControl("cv", number = 20),
tuneLength = 10
)
# plot(model)
ncomp = model$bestTune[[1]]
library(plsdepot)
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.gene.list]],
# pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% rel.geo.genes]],
pls1 = plsreg1(first_instance[,colnames(first_instance)[colnames(first_instance) %in% sub.rel.geo.genes.pls]],
first_instance[,'immunage'],
comps = ncomp)
# plot(first_instance$immunage, pls1$y.pred, type = 'n', xlab='Original', ylab = 'Predicted')
# text(first_instance$immunage, pls1$y.pred, col = '#5592e3')
rmse_res = RMSE(pls1$y.pred, first_instance$immunage)
## plotting correlation (pred vs. original)
jpeg(paste('results/rmse/', geo_pathway_names[i], '.jpg', sep = ''))
plot(first_instance$immunage, pls1$y.pred, xlab='Original', ylab = 'Predicted')
title('Comparison of responses', cex.main = 0.9)
abline(a = 0, b = 1, col = 'gray85', lwd = 2)
text(min(first_instance$immunage) + 10, max(pls1$y.pred) - 1, paste('RMSE:', round(rmse_res, 3)))
dev.off()
# cor(first_instance$immunage, pls1$y.pred)
## correlation circle
jpeg(paste('results/cor_circle/', geo_pathway_names[i], '.jpg', sep = ''))
plot(pls1)
dev.off()
pls1$y.loads
pls1$std.coefs[order(pls1$std.coefs)]
pls1$reg.coefs[order(pls1$reg.coefs)]
pls.rmse.res[[geo_pathway_names[[i]]]] = rmse_res
}
pls.rmse.res
which.min(pls.rmse.res)
geo.sub.models
geo.sub.models$GO_MACROAUTOPHAGY
coef(geo.sub.models$GO_MACROAUTOPHAGY)
length(geo.sub.models)
pls.rmse.res$GO_REGULATION_OF_AUTOPHAGY
?RMSE
all.geo.genes
geo_pathway_names
geo.pathways['"GO_AUTOPHAGOSOME_MATURATION" ']
